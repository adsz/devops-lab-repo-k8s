# /repos/devops-lab-new/devops-lab-repo-k8s/ubuntu-22.04/roles/k8s-precheck/tasks/main.yml
---
# *** TASKS TO CHECK FOR PREVIOUS K8S INSTALLATION (WITHOUT CLEANUP) ***
- name: Test k8s-precheck role
  debug:
    msg: "Running k8s-precheck role"
  tags: k8s_precheck

# Set status variables with default values
- name: Initialize environment status variables
  set_fact:
    env_clean: true
    env_issues: []
  tags: k8s_precheck

# Check 1: Ports
- name: Sprawdź, czy krytyczne porty Kubernetes są już zajęte
  become: yes
  shell: ss -Hltn '( sport = :6443 or sport = :10259 or sport = :10257 or sport = :10250 or sport = :2379 or sport = :2380 )' | grep LISTEN || true
  register: k8s_ports_check
  changed_when: false
  tags: k8s_precheck

- name: Check ports status
  set_fact:
    env_clean: false
    env_issues: "{{ env_issues + ['Krytyczne porty Kubernetes są już zajęte'] }}"
  when: k8s_ports_check.stdout != ""
  tags: k8s_precheck

- name: Debug k8s_ports_check
  debug:
    var: k8s_ports_check.stdout_lines
  when: k8s_ports_check is defined
  tags: k8s_precheck

# Check 2: Manifests
- name: Sprawdź, czy katalog manifestów Kubernetes (/etc/kubernetes/manifests) zawiera pliki
  become: yes
  ansible.builtin.find:
    paths: /etc/kubernetes/manifests
    file_type: file
    patterns: '*.yaml'
  register: k8s_manifests_check
  changed_when: false
  ignore_errors: true
  tags: k8s_precheck

- name: Check manifests status
  set_fact:
    env_clean: false
    env_issues: "{{ env_issues + ['Katalog /etc/kubernetes/manifests już istnieje i zawiera pliki'] }}"
  when: k8s_manifests_check.matched > 0
  tags: k8s_precheck

- name: Debug k8s_manifests_check
  debug:
    var: k8s_manifests_check.files
  when: k8s_manifests_check is defined
  tags: k8s_precheck

# Check 3: ETCD
- name: Sprawdź, czy katalog danych etcd (/var/lib/etcd) istnieje i nie jest pusty
  become: yes
  ansible.builtin.find:
    paths: /var/lib/etcd
    file_type: any
    hidden: yes
    recurse: no
  register: k8s_etcd_dir_check
  changed_when: false
  ignore_errors: true
  tags: k8s_precheck

- name: Check etcd status
  set_fact:
    env_clean: false
    env_issues: "{{ env_issues + ['Katalog /var/lib/etcd już istnieje i zawiera dane'] }}"
  when: k8s_etcd_dir_check.matched > 0
  tags: k8s_precheck

- name: Debug k8s_etcd_dir_check
  debug:
    var: k8s_etcd_dir_check.files
  when: k8s_etcd_dir_check is defined
  tags: k8s_precheck

# Check 4: Kubelet
- name: Sprawdź, czy usługa kubelet jest aktywna
  become: yes
  ansible.builtin.service_facts:
  register: service_facts
  tags: k8s_precheck

- name: Check kubelet status
  set_fact:
    env_clean: false
    env_issues: "{{ env_issues + ['Usługa kubelet jest już uruchomiona'] }}"
  when: "'kubelet' in service_facts.ansible_facts.services and service_facts.ansible_facts.services['kubelet'].state == 'running'"
  tags: k8s_precheck

# Check 5: Kubernetes config
- name: Sprawdź, czy istnieje plik konfiguracyjny Kubernetes
  stat:
    path: /etc/kubernetes/admin.conf
  register: k8s_config_check
  tags: k8s_precheck

- name: Check k8s config status
  set_fact:
    env_clean: false
    env_issues: "{{ env_issues + ['Plik konfiguracyjny Kubernetes /etc/kubernetes/admin.conf już istnieje'] }}"
  when: k8s_config_check.stat.exists
  tags: k8s_precheck

# Final status report
- name: Wyświetl podsumowanie czystego środowiska
  debug:
    msg: "ŚRODOWISKO JEST CZYSTE - można bezpiecznie instalować Kubernetes master node"
  when: env_clean
  tags: k8s_precheck

- name: Wyświetl podsumowanie problemów
  debug:
    msg: |
      UWAGA: Wykryto elementy wcześniejszej instalacji Kubernetes:
      {{ env_issues | join('\n- ') }}
      
      Zaleca się wyczyszczenie środowiska przed ponowną instalacją.
  when: not env_clean
  tags: k8s_precheck